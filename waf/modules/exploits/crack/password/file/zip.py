import zipfile,time,os
from waf.libs.color  import *
from waf.libs import variable as var

info = {
        "name"        : "zip",
        "title"       : "Guess the file password",
        "module"      : "exploits/crack/password/file/zip",
        "description" : "Guess the file password"
}

var.file     = ['Anony.zip']
var.listpass = ['waf/resources/pass.txt']

options ={
  "FILE"  : [str(var.file[0]),'ZIP file to crack'],
  "LTYPE" : [str(var.listpass[0]),'Wordlist']
}

def running():
        try:
                zip_filename = str(var.file[0])
                if not os.path.exists(zip_filename):
                        print(red+"[-]"+default+"File " + zip_filename + " was not found, Provide Valid FileName And Path!")
                print(blue+"[*]"+default+"Analyzing Zip File:- ", zip_filename)
                time.sleep(1)
                if zip_filename[-3:] == "zip":
                        print(blue+"[*]"+default+"Valid ZIP File Found...")
                else:
                        print(red+"[-]"+default+"This is not a valid .zip file...")
                pwd_filename = str(var.listpass[0])
                if not os.path.exists(pwd_filename):
                        print(red+"[-]"+default+"File " + pwd_filename + " was not found, Provide Valid FileName And Path!")

                with open(pwd_filename, "rb") as passwords:
                        passwords_list = passwords.readlines()
                        total_passwords = len(passwords_list)
                        my_zip_file = zipfile.ZipFile(zip_filename)
                        for index, password in enumerate(passwords_list):
                                try:
                                        my_zip_file.extractall(path="Extracted Folder", pwd=password.strip())
                                        print(green+"[+]"+defaul+"ZIP FILE Password Found:- "+password.decode().strip())
                                        break
                                except:
                                        helo = round((index / total_passwords) * 100, 2)
                                        if helo == '100%':
                                                print(red+"[-]"+default+"ALL ATTEMPTS FAILED")
                                        else:
                                                print(blue+"[*]"+default+"Trying password:- "+password.decode().strip() )
                                        continue
        except Exception as e:
                print(red+"\n[-]"+default+"Error : "+str(e))
